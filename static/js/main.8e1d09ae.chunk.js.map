{"version":3,"sources":["components/GameTitle.js","components/GameView.js","components/GameLogic.js","components/App.js","index.js"],"names":["GameTitle","className","GameView","props","onLiClick","onIconClick","onButtonClick","hideEffect","clickedCells","winner","sign","map","el","index","onClick","key","value","icon","defaultValues","1","2","3","4","5","6","7","8","9","GameLogic","useState","setSign","setHideEffect","setWinner","setClickedCells","useEffect","valuesObject","console","log","numbersForCheck","i","first","second","third","getGameResult","e","target","alert","stopPropagation","App","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.8e1d09ae.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../styles/game.css';\r\n\r\nconst GameTitle = () => {\r\n    return (\r\n        <h2 className=\"header\">TIC TAC TOE</h2>\r\n    );\r\n};\r\n\r\nexport default GameTitle;","import React from 'react';\r\nimport '../styles/game.css';\r\n\r\nconst GameView = (props) => {\r\n    let {onLiClick, onIconClick, onButtonClick, hideEffect, clickedCells, winner, sign} = props;\r\n\r\n    const renderList = () => {\r\n        const helperArray = [1, 2, 3, 4, 5, 6, 7, 8, 9];\r\n        \r\n        return helperArray.map((el, index) => {\r\n            return (\r\n                <li onClick={onLiClick} key={index} value={index + 1}>\r\n                    <i \r\n                        onClick={onIconClick} \r\n                        className={`huge ${hideEffect[index + 1].icon} icon ${hideEffect[index + 1].value}`} \r\n                    />\r\n                </li>\r\n            );\r\n        });\r\n    };\r\n\r\n    const renderWinner = () => {\r\n        if (clickedCells === 9 && !winner) {\r\n            return 'No one won..';\r\n        }\r\n\r\n        return winner ? 'is the winner!' : 'turn';\r\n    };\r\n\r\n    return (\r\n        <div className=\"desk\">\r\n            <div className=\"move-container\">\r\n                <h4 className=\"move\">\r\n                    <i className={`${clickedCells === 9 && !winner ? '' : winner || sign} icon`} \r\n                /> {renderWinner()}</h4>\r\n            </div>\r\n            <div className=\"border\">\r\n                <ul className=\"list\">\r\n                    {renderList()}\r\n                </ul>\r\n            </div>\r\n            <div className=\"regame\" >\r\n                <button onClick={onButtonClick}>\r\n                    Play again\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GameView;","import React, {useState, useEffect} from 'react';\r\nimport GameView from './GameView';\r\n\r\nconst defaultValues = {\r\n    1: { value: 'hidden', icon: '1' },\r\n    2: { value: 'hidden', icon: '2' },\r\n    3: { value: 'hidden', icon: '3' },\r\n    4: { value: 'hidden', icon: '4' },\r\n    5: { value: 'hidden', icon: '5' },\r\n    6: { value: 'hidden', icon: '6' },\r\n    7: { value: 'hidden', icon: '7' },\r\n    8: { value: 'hidden', icon: '8' },\r\n    9: { value: 'hidden', icon: '9' }\r\n};\r\n\r\nconst GameLogic = () => {\r\n    const [sign, setSign] = useState('times');\r\n    const [hideEffect, setHideEffect] = useState({...defaultValues});\r\n    const [winner, setWinner] = useState('');\r\n    const [clickedCells, setClickedCells] = useState(0);\r\n\r\n    const onLiClick = (e) => {\r\n        if (winner) {} \r\n        else if (hideEffect[e.target.value].value) {\r\n            setHideEffect({ ...hideEffect, [e.target.value]: { value: '', icon: sign} });\r\n            setSign(sign === 'times' ? 'circle outline' : 'times');\r\n            setClickedCells(clickedCells + 1);\r\n        } else if (clickedCells < 9){\r\n            alert('Select another cell!');\r\n        }\r\n    };\r\n\r\n    const onIconClick = (e) => {\r\n        if (winner) {}\r\n        else {\r\n            e.stopPropagation();\r\n\r\n            if (clickedCells < 9) alert('Select another cell!');\r\n        }\r\n    };\r\n\r\n    const onButtonClick = () => {\r\n        setSign('times');\r\n        setHideEffect({...defaultValues});\r\n        setWinner('');\r\n        setClickedCells(0);\r\n    };\r\n\r\n    const getGameResult = (valuesObject) => {\r\n        console.log('hi');\r\n        const numbersForCheck = [\r\n            [1, 2, 3],\r\n            [1, 4, 7],\r\n            [1, 5, 9],\r\n            [2, 5, 8],\r\n            [3, 6, 9],\r\n            [3, 5, 7],\r\n            [4, 5, 6],\r\n            [7, 8, 9]\r\n        ];\r\n\r\n        for (let i = 0; i < 8; i++) {\r\n            let [first, second, third] = numbersForCheck[i];\r\n\r\n            if (valuesObject[first].icon === valuesObject[second].icon &&\r\n                valuesObject[first].icon === valuesObject[third].icon) {\r\n                    setWinner(`${sign === 'times' ? 'circle outline' : 'times'}`);\r\n            }\r\n        }\r\n    };\r\n\r\n    useEffect(() => getGameResult(hideEffect), [sign]);\r\n\r\n    return (\r\n        <GameView \r\n            onLiClick={onLiClick}\r\n            onIconClick={onIconClick}\r\n            hideEffect={hideEffect}\r\n            clickedCells={clickedCells}\r\n            winner={winner}\r\n            sign={sign}\r\n            onButtonClick={onButtonClick}\r\n        />\r\n    );\r\n};\r\n\r\nexport default GameLogic;","import React from 'react';\r\nimport GameTitle from './GameTitle';\r\nimport GameLogic from './GameLogic';\r\nimport '../styles/game.css';\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <GameTitle />\r\n            <GameLogic />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.querySelector('#root')\r\n);"],"sourceRoot":""}